/*
REST_INFO 식당의 정보
REST_ID, REST_NAME, FOOD_TYPE, VIEWS, FAVORITES, PARKING_LOT, ADDRESS, TEL

REST_REVIEW 식당의 리뷰 정보
REVIEW_ID, REST_ID, MEMBER_ID, REVIEW_SCORE, REVIEW_TEXT,REVIEW_DATE

[요구]
서울에 위치한 식당들의 식당 ID, 식당 이름, 음식 종류, 즐겨찾기수, 주소, 리뷰 평균 점수를 조회

[조회] 리뷰 평균점수 -> 소수점 세 번째 자리에서 반올림 
[정렬] 평균점수 desc, 즐겨찾기 desc
*/

SELECT RO.REST_ID, RO.REST_NAME, RO.FOOD_TYPE, RO.FAVORITES, RO.ADDRESS, ROUND(AVG(RW.REVIEW_SCORE), 2) AS SCORE
FROM REST_REVIEW AS RW
INNER JOIN (
    SELECT REST_ID, REST_NAME, FOOD_TYPE, FAVORITES, ADDRESS
    FROM REST_INFO
    WHERE ADDRESS LIKE "서울%"
) AS RO
ON RW.REST_ID = RO.REST_ID
GROUP BY RO.REST_ID
ORDER BY SCORE DESC, FAVORITES DESC;


# SELECT RO.REST_ID, RO.REST_NAME, RO.FOOD_TYPE, RO.FAVORITES, RO.ADDRESS, ROUND(AVG(RW.REVIEW_SCORE), 2) AS SCORE
# FROM REST_REVIEW AS RW
# INNER JOIN REST_INFO AS RO
#     ON RW.REST_ID = RO.REST_ID
# WHERE RO.ADDRESS LIKE '서울%'
# GROUP BY RW.REST_ID
# ORDER BY SCORE DESC, FAVORITES DESC;


